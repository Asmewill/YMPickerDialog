package com.airsaid.pickerviewlibrary;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.widget.Button;import android.widget.TextView;import com.airsaid.pickerviewlibrary.listener.OnItemSelectedListener;import com.airsaid.pickerviewlibrary.listener.OnOptionsSelectListener;import com.airsaid.pickerviewlibrary.widget.BasePickerView;import com.airsaid.pickerviewlibrary.widget.WheelOptions;import java.util.ArrayList;/** * 奖励，年化收益率，年利率选择器 * Created by Sai on 15/11/22. */public class AwardPickerView<T> extends BasePickerView implements View.OnClickListener {    private Context mContext;    private OnOptionsSelectListener mOptionsSelectListener;    private WheelOptions<T> mWheelOptions;    private Button btn_sure;    private TextView tv_title,tv_msg;    private int var ;//2.年利率 3.奖励 1.年化收益率    public AwardPickerView(Context context,int var) {        super(context);        mContext = context;        this.var=var;        initView();    }    private void initView() {        LayoutInflater.from(mContext).inflate(R.layout.award_pickerview, contentContainer);        mWheelOptions = new WheelOptions<>(findViewById(R.id.optionspicker));        btn_sure= (Button) findViewById(R.id.btn_sure);        tv_title= (TextView) findViewById(R.id.tv_title);        tv_msg= (TextView) findViewById(R.id.tv_msg);        btn_sure.setOnClickListener(this);        switch (var){            case 1:                tv_title.setText("年化收益率大于等于");                tv_msg.setVisibility(View.VISIBLE);                break;            case 2:                tv_title.setText("年利率大于等于");                tv_msg.setVisibility(View.GONE);                break;            case 3:                tv_title.setText("奖励率大于等于");                tv_msg.setVisibility(View.GONE);                break;        }    }    /**     * 设置一级数据     */    public void setPicker(ArrayList<T> optionsItems) {        mWheelOptions.setPicker(optionsItems, null, null, false);    }    /**     * 设置二级数据     */    public void setPicker(ArrayList<T> options1Items, ArrayList<ArrayList<T>> options2Items, boolean linkage) {        mWheelOptions.setPicker(options1Items, options2Items, null, linkage);    }    /**     * 设置三级数据     */    public void setPicker(ArrayList<T> options1Items, ArrayList<ArrayList<T>> options2Items            , ArrayList<ArrayList<ArrayList<T>>> options3Items, boolean linkage) {        mWheelOptions.setPicker(options1Items, options2Items, options3Items, linkage);    }    /**     * 设置选中的item位置     * @param option1 位置     */    public void setSelectOptions(int option1){        mWheelOptions.setCurrentItems(option1, 0, 0);    }    public void setSelectOptions(int option1, int option2){        mWheelOptions.setCurrentItems(option1, option2, 0);    }    public void setSelectOptions(int option1, int option2, int option3){        mWheelOptions.setCurrentItems(option1, option2, option3);    }    /**     * 设置选项的单位     * @param label1 单位     */    public void setLabels(String label1){        mWheelOptions.setLabels(label1, null, null);    }    public void setLabels(String label1, String label2){        mWheelOptions.setLabels(label1, label2, null);    }    public void setLabels(String label1, String label2, String label3){        mWheelOptions.setLabels(label1, label2, label3);    }    /**     * 设置是否循环滚动     */    public void setCyclic(boolean cyclic){        mWheelOptions.setCyclic(cyclic);    }    public void setCyclic(boolean cyclic1, boolean cyclic2, boolean cyclic3) {        mWheelOptions.setCyclic(cyclic1, cyclic2, cyclic3);    }    /**     * 设置滚动文字大小     */    public void setTextSize(float size){        mWheelOptions.setTextSize(size);    }    public void setOnScrollChangeListener(OnItemSelectedListener onItemSelectedListener1,OnItemSelectedListener onItemSelectedListener2,OnItemSelectedListener onItemSelectedListener3){        mWheelOptions.setOnItemSelectedListener(onItemSelectedListener1,onItemSelectedListener2,onItemSelectedListener3);    }    @Override    public void onClick(View v){        if(v.getId()== R.id.btn_sure){            if(mOptionsSelectListener != null){                int[] optionsCurrentItems = mWheelOptions.getCurrentItems();                mOptionsSelectListener.onOptionsSelect(optionsCurrentItems[0], optionsCurrentItems[1], optionsCurrentItems[2]);            }            dismiss();        }    }    public void setOnOptionsSelectListener(            OnOptionsSelectListener optionsSelectListener) {        this.mOptionsSelectListener = optionsSelectListener;    }}